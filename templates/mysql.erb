package com.bareknucklecoding.plato.json_models;

import java.util.List;
import java.util.ArrayList;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;


public class <%= class_name %> {
  public final String TABLE_NAME <%= stringify(model.name) -%>;
  public final class Columns {
    <%- columns.each do |column| -%>
      <%= "public final String #{column[:field]} = #{column[:name]}" %>
    <%- end -%>
  }

  public final class OpenHelper extends SQLiteOpenHelper {
    private static final int DATABASE_VERSION = 1;
    private static final String CREATE_TABLE_COMMAND = "CREATE TABLE "
    + TABLE_NAME + " "
    + "("
    <%- columns.each_with_index do |column, index| -%>
      <%- if index == columns.size - 1 -%>
      + <%= "Columns.#{column[:field]} + \" #{column[:type]}\"" %>;
      <%- else -%>
      + <%= "Columns.#{column[:field]} + \" #{column[:type]}, \"" %>;
      <%- end -%>
    <%- end -%>
    + ")";

    OpenHelper(Context context) {
      super(context, DatabaseSettings.DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
      db.execSQL(CREATE_TABLE_COMMAND);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
      db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
      onCreate(db);
    }
  }

  public static final class DataSource {
    private OpenHelper dbHelper;

    public static <%= class_name -%> find(Integer i) {
      SQLiteDatabase db = dbHelper.getWritableDatabase();
      Cursor cursor = db.query(TABLE_NAME, null, null,
          null, null, null, null, i.toString());

      <%= class_name -%> object = null;
      if (cursor.moveToFirst()) {
        object = new <%= class_name -%>(cursor);
      }

      db.close();
      cursor.close();
      return object;
    }

    public static void create(<%= class_name -%> object) {
      SQLiteDatabase db = dbHelper.getWritableDatabase();
      ContentValues values = object.getContentValues();
      db.insert(TABLE_NAME, null, values);
      db.close();
    }

    public static void update(<%= class_name -%> object) {
      SQLiteDatabase db = dbHelper.getWritableDatabase();
      ContentValues values = object.getContentValues();
      db.update(TABLE_NAME, null, values);
      db.close();
    }

    public static void destroy(<%= class_name -%> object) {
      SQLiteDatabase db = dbHelper.getWritableDatabase();
      ContentValues values = object.getContentValues();
      db.delete(TABLE_NAME, "id = ?", new String[] {
        String.valueOf(object.getId());
      });
      db.close();
    }
  }
}
